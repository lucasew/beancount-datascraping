#!/usr/bin/env python3

from pathlib import Path
from dataclasses import dataclass
from datetime import date, datetime
import json
import logging
from urllib.request import urlopen, Request
import functools
from csv import DictWriter

logging.basicConfig()
logger = logging.getLogger(__name__)

CURRENT_DIR=Path(__file__).parent
TODAY = datetime.today().date()

USER_AGENT = "Mozilla/5.0 (X11; Linux x86_64; rv:137.0) Gecko/20100101 Firefox/137.0"

@functools.cache
def fetch_body(url: str, fetch_try=0):
    logger.debug(f"fetch: {url}")
    res = urlopen(Request(url, headers={
      "User-Agent": USER_AGENT,
    }))
    return res.read()

def fetch_json(url: str):
    return json.loads(fetch_body(url))

@dataclass
class Entry():
    day: date
    price: float

    @property
    def columns(self):
        return ['day', 'price']

    @property
    def line(self):
        return {"day": str(self.day), "price": self.price}

content = fetch_json("https://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json")
items = [item['TrsrBd'] for item in content['response']['TrsrBdTradgList']]
for item in items:
    output_file = CURRENT_DIR / "tesourodireto" / (item['nm'] + '.csv')
    output_file.parent.mkdir(parents=True, exist_ok=True)
    entry = Entry(day=TODAY, price=item['untrRedVal'])
    if not output_file.exists():
        with output_file.open('w') as f:
            w = DictWriter(f, fieldnames=entry.columns)
            w.writeheader()
    with output_file.open('a') as f:
        w = DictWriter(f, fieldnames=entry.columns)
        w.writerow(entry.line)
